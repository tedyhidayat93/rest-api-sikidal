var pool=require('./dbCon').pool;const fs=require('fs');const path=require('path')
const base_url=process.env.base_url;const bcrypt=require("bcrypt");const jwt=require('jsonwebtoken');const res=require('express/lib/response');const req=require('express/lib/request');const{param}=require('express/lib/request');var complete_path='';var password_hash;const create=(request,response)=>{const{role_id,nama_lengkap,jenis_kelamin,nomor_telepon,email,username,password,foto_profile,nama_kerabat,hubungan_dengan_kerabat,nomor_telepon_darurat,pelabuhan_id,kapal_id,other_profesi_id,created_by,}=request.body
pool.query('SELECT COUNT(*) as total FROM tbl_users WHERE username = ?',[username],(error,results)=>{if(error){throw error}else{if(parseInt(results[0]["total"])>0){response.status(400).json({success:false,data:"Username sudah terdaftar."});}else{if(request.files){let namafile=request.files.foto_profile;const tgl=Date.now()
custom_name=tgl+'_'+namafile.name.replace(/\s+/g,'');foto=custom_name
namafile.mv(path.join(__dirname+'/media/images/users/')+custom_name,function(err){if(err)
console.log(err);});}else{foto="default.jpg";}
bcrypt.genSalt(10,function(err,res){salt=res
bcrypt.hash(password,salt,function(err,res){password_hash=res;console.log(password_hash);pool.query('INSERT INTO tbl_users (role_id,nama_lengkap,jenis_kelamin,nomor_telepon,email,username,password,foto_profile,nama_kerabat,hubungan_dengan_kerabat,nomor_telepon_darurat,pelabuhan_id,kapal_id,other_profesi_id,created_by) VALUES ("'+role_id+'","'+nama_lengkap+'","'+jenis_kelamin+'","'+nomor_telepon+'","'+email+'","'+username+'","'+password_hash+'","'+foto+'","'+nama_kerabat+'","'+hubungan_dengan_kerabat+'","'+nomor_telepon_darurat+'","'+pelabuhan_id+'","'+kapal_id+'","'+other_profesi_id+'","'+created_by+'")',(error,results)=>{if(error){throw error}else{response.status(200).json({success:true,message:"User berhasil dibuat.",data:{nama_lengkap:nama_lengkap,username:username,}});}});});});}}})}
const read=(request,response)=>{pool.query('SELECT count(*) as total FROM tbl_users where is_delete=0',(error,results)=>{var total=results[0].total;if(error){throw error}else if(parseInt(results[0].total)==0){response.status(400).send({success:true,total:total,message:"Data user kosong."});}else{pool.query('SELECT * FROM tbl_users where is_delete=0',(error,results)=>{if(error){throw error}
response.status(200).send({success:true,total:total,data:results,});});}});}
const read_by_id=(request,response)=>{const id=parseInt(request.params.id);pool.query('SELECT count(*) as total FROM tbl_users where is_delete=0 and id = ?',[id],(error,results)=>{var total=results[0].total;if(error){throw error}else if(parseInt(total)==0){response.status(400).send({success:true,total:total,message:"Data user tidak ditemukan."});}else{pool.query('SELECT * FROM tbl_users where is_delete=0 and id = ?',[id],(error,results)=>{if(error){throw error}
response.status(200).send({success:true,total:total,data:results,});});}});}
const login=(request,response)=>{const{username,password}=request.body
pool.query('SELECT count(*) as total FROM tbl_users WHERE username = ?',[username],(error,results)=>{console.log(results)
var total=results[0].total;if(total>0){pool.query('SELECT * FROM tbl_users WHERE username = ?',[username],(error,results)=>{bcrypt.compare(password,results[0].password,function(err,res){if(res){const token=generateAccessToken({username:username})
response.status(200).json({success:true,"token":token,"id":results[0].id,"username":username,role:results[0].role_id||'no_role',nama_lengkap:results[0].nama_lengkap})}else{response.status(400).json({success:false,data:"password tidak sama"});}});})}else{response.status(400).json({success:false,total:total,data:"user tidak di temukan"});}})}








function generateAccessToken(username){return jwt.sign(username,process.env.TOKEN_SECRET,{expiresIn:'10800s'});}
module.exports={create,read,login,read_by_id,}